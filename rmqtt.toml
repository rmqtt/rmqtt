##--------------------------------------------------------------------
## General
##--------------------------------------------------------------------

##--------------------------------------------------------------------
## Task
##--------------------------------------------------------------------
#Concurrent task count for global task executor.
task.exec_workers = 2000
#Queue capacity for global task executor.
task.exec_queue_max = 300_000


##--------------------------------------------------------------------
## Node
##--------------------------------------------------------------------
#Node id
node.id = 1

#Busy status check switch.
#default value: false
node.busy.check_enable = false
#Busy status update interval.
#default value: 2s
node.busy.update_interval = "2s"
#The threshold for the 1-minute average system load used to determine system busyness.
#Value range: 0.0-100.0, default value: 80.0
node.busy.loadavg = 80.0
#The threshold for average CPU load used to determine system busyness.
#Value range: 0.0-100.0, default value: 90.0
node.busy.cpuloadavg = 90.0
#The threshold for determining high-concurrency connection handshakes in progress.
node.busy.handshaking = 0

##--------------------------------------------------------------------
## RPC (Remote Procedure Call) Configuration Section
##--------------------------------------------------------------------
# gRPC server listening address
# Format: "IP:PORT"
# "0.0.0.0" means listen on all available network interfaces
# 5363 is the default listening port
rpc.server_addr = "0.0.0.0:5363"

# Enable SO_REUSEADDR socket option
# true allows immediate reuse of addresses in TIME_WAIT state (useful for fast service restart)
rpc.reuseaddr = true

# Enable SO_REUSEPORT socket option
# false prevents multiple sockets from binding to same IP+PORT combination
# (Linux 3.9+ kernel feature, can be used for load balancing)
rpc.reuseport = false

##--------------------------------------------------------------------
## Log
##--------------------------------------------------------------------
# Value: off | file | console | both
log.to = "both"
# Value: trace, debug, info, warn, error
log.level = "info"
log.dir = "/var/log/rmqtt"
log.file = "rmqtt.log"


##--------------------------------------------------------------------
## Plugins
##--------------------------------------------------------------------
#Plug in configuration file directory
plugins.dir = "rmqtt-plugins/"
#Plug in started by default, when the mqtt server is started
plugins.default_startups = [
    #"rmqtt-plugin-template",
    #"rmqtt-retainer",
    #"rmqtt-auth-http",
    #"rmqtt-cluster-broadcast",
    #"rmqtt-cluster-raft",
    #"rmqtt-sys-topic",
    #"rmqtt-message-storage",
    #"rmqtt-session-storage",
    #"rmqtt-bridge-ingress-mqtt",
    #"rmqtt-bridge-egress-mqtt",
    #"rmqtt-bridge-ingress-kafka",
    #"rmqtt-bridge-egress-kafka",
    #"rmqtt-topic-rewrite",
    #"rmqtt-auto-subscription",
    #"rmqtt-bridge-egress-pulsar",
    #"rmqtt-bridge-ingress-pulsar",
    #"rmqtt-auth-jwt",
    #"rmqtt-bridge-egress-nats",
    #"rmqtt-bridge-ingress-nats",
    #"rmqtt-bridge-egress-reductstore",
    #"rmqtt-web-hook",
    #"rmqtt-p2p-messaging",
    "rmqtt-http-api"
]


##--------------------------------------------------------------------
## MQTT
##--------------------------------------------------------------------
#Delayed message send limit
mqtt.delayed_publish_max = 100_000
#Send immediately when limit exceeded, true/false,
#true -  message will be sent immediately,
#false - message will be discarded,
#default: true
mqtt.delayed_publish_immediate = true

#Maximum session limit, 0: no limit, default value: 0.
mqtt.max_sessions = 0


##--------------------------------------------------------------------
## Listeners
##--------------------------------------------------------------------

##--------------------------------------------------------------------
## MQTT/TCP - External TCP Listener for MQTT Protocol
listener.tcp.external.addr = "0.0.0.0:1883"
#Number of worker threads (currently unused)
listener.tcp.external.workers = 8
#The maximum number of concurrent connections allowed by the listener.
listener.tcp.external.max_connections = 1024000
#Maximum concurrent handshake limit, Default: 500
listener.tcp.external.max_handshaking_limit = 500
#Handshake timeout.
listener.tcp.external.handshake_timeout = "30s"
#Maximum allowed mqtt message length. 0 means unlimited, default: 1MB
listener.tcp.external.max_packet_size = "1MB"
#The maximum length of the TCP connection queue.
#It indicates the maximum number of TCP connection queues that are being handshaked three times in the system
listener.tcp.external.backlog = 1024
#Sets the value of the TCP_NODELAY option on this socket.
#default: false
listener.tcp.external.nodelay = false
#Whether anonymous login is allowed. Default: true
listener.tcp.external.allow_anonymous = true
#A value of zero indicates disabling the keep-alive feature, where the server
#doesn't need to disconnect due to client inactivity, default: true
listener.tcp.external.allow_zero_keepalive = true
#Minimum allowable keepalive value for mqtt connection,
#less than this value will reject the connection(MQTT V3),
#less than this value will set keepalive to this value in CONNACK (MQTT V5),
#default: 0, unit: seconds
listener.tcp.external.min_keepalive = 0
#Maximum allowable keepalive value for mqtt connection,
#greater than this value will reject the connection(MQTT V3),
#greater than this value will set keepalive to this value in CONNACK (MQTT V5),
#default value: 65535, unit: seconds
listener.tcp.external.max_keepalive = 65535
# > 0.5, Keepalive * backoff * 2
listener.tcp.external.keepalive_backoff = 0.75
#Flight window size. The flight window is used to store the unanswered QoS 1 and QoS 2 messages
listener.tcp.external.max_inflight = 16
#Maximum length of message queue
listener.tcp.external.max_mqueue_len = 1000
#The rate at which messages are ejected from the message queue,
#default value: "u32::max_value(),1s"
listener.tcp.external.mqueue_rate_limit = "1000,1s"
#Maximum length of client ID allowed, Default: 65535
listener.tcp.external.max_clientid_len = 65535
#The maximum QoS level that clients are allowed to publish. default value: 2
listener.tcp.external.max_qos_allowed = 2
#The maximum level at which clients are allowed to subscribe to topics.
#0 means unlimited. default value: 0
listener.tcp.external.max_topic_levels = 0
#Duration before inactive sessions expire, default value: 2 hours
listener.tcp.external.session_expiry_interval = "2h"
#The upper limit for how long a session can remain valid before it must expire,
#regardless of the client's requested session expiry interval
#default value: 0 hours (unlimited)
listener.tcp.external.max_session_expiry_interval = "0h"
#QoS 1/2 message retry interval, 0 means no resend
listener.tcp.external.message_retry_interval = "20s"
#Message expiration time, 0 means no expiration, default value: 5 minutes
listener.tcp.external.message_expiry_interval = "5m"
#The maximum number of topics that a single client is allowed to subscribe to
#0 means unlimited, default value: 0
listener.tcp.external.max_subscriptions = 0
#Shared subscription switch, default value: true
listener.tcp.external.shared_subscription = true
#topic alias maximum, default value: 0, topic aliases not enabled. (MQTT 5.0)
listener.tcp.external.max_topic_aliases = 32
#Limit subscription switch, default value: false
listener.tcp.external.limit_subscription = false
#Delayed publish switch, default value: false
listener.tcp.external.delayed_publish = false
#Proxy Protocol switch, default value: false
listener.tcp.external.proxy_protocol = false
#Proxy Protocol timeout, default value: 5s
listener.tcp.external.proxy_protocol_timeout = "5s"

##--------------------------------------------------------------------
## MQTT/TCP - Internal TCP Listener for MQTT Protocol
listener.tcp.internal.enable = true
listener.tcp.internal.addr = "0.0.0.0:11883"
listener.tcp.internal.max_connections = 102400
listener.tcp.internal.max_handshaking_limit = 500
listener.tcp.internal.handshake_timeout = "30s"
listener.tcp.internal.max_packet_size = "1M"
listener.tcp.internal.backlog = 512
listener.tcp.internal.nodelay = false
listener.tcp.internal.allow_anonymous = true
listener.tcp.internal.allow_zero_keepalive = true
listener.tcp.internal.min_keepalive = 0
listener.tcp.internal.max_keepalive = 65535
listener.tcp.internal.keepalive_backoff = 0.75
listener.tcp.internal.max_inflight = 128
listener.tcp.internal.max_mqueue_len = 1000
listener.tcp.internal.mqueue_rate_limit = "5000,1s"
listener.tcp.internal.max_clientid_len = 65535
listener.tcp.internal.max_qos_allowed = 2
listener.tcp.internal.max_topic_levels = 0
listener.tcp.internal.session_expiry_interval = "2h"
listener.tcp.internal.max_session_expiry_interval = "0h"
listener.tcp.internal.message_retry_interval = "30s"
listener.tcp.internal.message_expiry_interval = "5m"
listener.tcp.internal.max_subscriptions = 0
listener.tcp.internal.shared_subscription = true
listener.tcp.internal.max_topic_aliases = 0
listener.tcp.internal.limit_subscription = false

##--------------------------------------------------------------------
## MQTT/TLS - External TLS Listener for MQTT Protocol, (TLSv1.2)
listener.tls.external.addr = "0.0.0.0:8883"
#Whether to enable cross-certification, default value: false
listener.tls.external.cross_certificate = false
#This certificate is used to authenticate the server during TLS handshakes.
listener.tls.external.cert = "./rmqtt-bin/rmqtt.pem"
#This key is used to establish a secure connection with the client.
listener.tls.external.key = "./rmqtt-bin/rmqtt.key"

#The following is the configuration using cross-certification
#listener.tls.external.cross_certificate = true
#listener.tls.external.cert = "./rmqtt-bin/rmqtt.fullchain.pem"
#listener.tls.external.key = "./rmqtt-bin/rmqtt.key"

##--------------------------------------------------------------------
## MQTT/WebSocket - External WebSocket Listener for MQTT Protocol
listener.ws.external.addr = "0.0.0.0:8080"

##--------------------------------------------------------------------
## MQTT/TLS-WebSocket - External TLS-WebSocket Listener for MQTT Protocol, (TLSv1.2)
listener.wss.external.addr = "0.0.0.0:8443"
listener.wss.external.cross_certificate = false
listener.wss.external.cert = "./rmqtt-bin/rmqtt.pem"
listener.wss.external.key = "./rmqtt-bin/rmqtt.key"
#listener.wss.external.cross_certificate = true
#listener.wss.external.cert = "./rmqtt-bin/rmqtt.fullchain.pem"
#listener.wss.external.key = "./rmqtt-bin/rmqtt.key"

