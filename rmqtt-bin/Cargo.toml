[package]
name = "rmqttd"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
repository.workspace = true
description.workspace = true
categories.workspace = true
keywords.workspace = true
exclude.workspace = true
rust-version.workspace = true
build = "build.rs"

[[bin]]
name = "rmqttd"
path = "src/server.rs"

[target.'cfg(target_os = "linux")'.dependencies]
tikv-jemallocator = "0.6"

[dependencies]
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "signal"] }
#rmqtt.workspace = true
rmqtt = { workspace = true, features = ["full"] }
rmqtt-conf.workspace = true
rmqtt-net.workspace = true
structopt.workspace = true
log.workspace = true
slog.workspace = true
slog-stdlog.workspace = true
slog-scope.workspace = true
slog-term.workspace = true
slog-async.workspace = true
anyhow.workspace = true
chrono = { workspace = true, features = ["clock"] }

##plugins
rmqtt-acl.workspace = true
rmqtt-retainer = { workspace = true, features = ["ram", "sled", "redis"] }
rmqtt-http-api.workspace = true
rmqtt-counter.workspace = true
rmqtt-auth-http.workspace = true
rmqtt-auth-jwt.workspace = true
rmqtt-auto-subscription.workspace = true
rmqtt-bridge-egress-kafka.workspace = true
rmqtt-bridge-ingress-kafka.workspace = true
rmqtt-bridge-egress-mqtt.workspace = true
rmqtt-bridge-ingress-mqtt.workspace = true
rmqtt-bridge-egress-pulsar.workspace = true
rmqtt-bridge-ingress-pulsar.workspace = true
rmqtt-bridge-ingress-nats.workspace = true
rmqtt-bridge-egress-nats.workspace = true
rmqtt-bridge-egress-reductstore.workspace = true
rmqtt-message-storage = { workspace = true, features = ["ram", "redis", "redis-cluster"] }
rmqtt-session-storage = { workspace = true, features = ["sled", "redis", "redis-cluster"] }
rmqtt-sys-topic.workspace = true
rmqtt-topic-rewrite.workspace = true
rmqtt-web-hook.workspace = true
rmqtt-cluster-raft.workspace = true
rmqtt-cluster-broadcast.workspace = true
rmqtt-p2p-messaging.workspace = true
#rmqtt-plugin-template = "0.1"

[package.metadata.plugins]
rmqtt-acl = { default_startup = true }
rmqtt-retainer = { }
rmqtt-http-api = { default_startup = true }
rmqtt-counter = { default_startup = true }
rmqtt-auth-http = { }
rmqtt-auth-jwt = { }
rmqtt-auto-subscription = { }
rmqtt-bridge-egress-kafka = { }
rmqtt-bridge-ingress-kafka = { }
rmqtt-bridge-egress-mqtt = { }
rmqtt-bridge-ingress-mqtt = { }
rmqtt-bridge-egress-pulsar = { }
rmqtt-bridge-ingress-pulsar = { }
rmqtt-bridge-ingress-nats = { }
rmqtt-bridge-egress-nats = { }
rmqtt-bridge-egress-reductstore = { }
rmqtt-message-storage = { immutable = true }
rmqtt-session-storage = { immutable = true }
rmqtt-sys-topic = { }
rmqtt-topic-rewrite = { }
rmqtt-web-hook = { }
rmqtt-cluster-raft = { immutable = true }
rmqtt-cluster-broadcast = { immutable = true }
rmqtt-p2p-messaging = { }
#rmqtt-plugin-template = { }

[build-dependencies]
toml.workspace = true

