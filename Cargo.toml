[workspace]
resolver = "2"
members = [
    "rmqtt",
    "rmqtt-plugins",
    "rmqtt-plugins/rmqtt-*",
    "rmqtt-bin",
    "rmqtt-macros",
    "rmqtt-codec",
    "rmqtt-net",
    "rmqtt-conf",
    "rmqtt-utils",
    "rmqtt/examples/*",
]

[patch.crates-io]
rmqtt = { path = "rmqtt" }
rmqtt-codec = { path = "rmqtt-codec" }
rmqtt-net = { path = "rmqtt-net" }
rmqtt-conf = { path = "rmqtt-conf" }
rmqtt-macros = { path = "rmqtt-macros" }
rmqtt-utils = { path = "rmqtt-utils" }

rmqtt-plugins = { path = "rmqtt-plugins" }
#rmqtt-plugin-template = { path = "rmqtt-plugins/rmqtt-plugin-template" }
rmqtt-acl = { path = "rmqtt-plugins/rmqtt-acl" }
rmqtt-web-hook = { path = "rmqtt-plugins/rmqtt-web-hook" }
rmqtt-auth-http = { path = "rmqtt-plugins/rmqtt-auth-http" }
rmqtt-auth-jwt = { path = "rmqtt-plugins/rmqtt-auth-jwt" }
rmqtt-cluster-broadcast = { path = "rmqtt-plugins/rmqtt-cluster-broadcast" }
rmqtt-cluster-raft = { path = "rmqtt-plugins/rmqtt-cluster-raft" }
rmqtt-counter = { path = "rmqtt-plugins/rmqtt-counter" }
rmqtt-http-api = { path = "rmqtt-plugins/rmqtt-http-api" }
rmqtt-retainer = { path = "rmqtt-plugins/rmqtt-retainer" }
rmqtt-sys-topic = { path = "rmqtt-plugins/rmqtt-sys-topic" }
rmqtt-session-storage = { path = "rmqtt-plugins/rmqtt-session-storage" }
rmqtt-message-storage = { path = "rmqtt-plugins/rmqtt-message-storage" }
rmqtt-topic-rewrite = { path = "rmqtt-plugins/rmqtt-topic-rewrite" }
rmqtt-auto-subscription = { path = "rmqtt-plugins/rmqtt-auto-subscription"}
rmqtt-bridge-ingress-mqtt = { path = "rmqtt-plugins/rmqtt-bridge-ingress-mqtt" }
rmqtt-bridge-egress-mqtt = { path = "rmqtt-plugins/rmqtt-bridge-egress-mqtt" }
rmqtt-bridge-ingress-kafka = { path = "rmqtt-plugins/rmqtt-bridge-ingress-kafka" }
rmqtt-bridge-egress-kafka = { path = "rmqtt-plugins/rmqtt-bridge-egress-kafka" }
rmqtt-bridge-ingress-pulsar = { path = "rmqtt-plugins/rmqtt-bridge-ingress-pulsar"}
rmqtt-bridge-egress-pulsar = { path = "rmqtt-plugins/rmqtt-bridge-egress-pulsar"}
rmqtt-bridge-ingress-nats = { path = "rmqtt-plugins/rmqtt-bridge-ingress-nats"}
rmqtt-bridge-egress-nats = { path = "rmqtt-plugins/rmqtt-bridge-egress-nats"}
rmqtt-bridge-egress-reductstore = { path = "rmqtt-plugins/rmqtt-bridge-egress-reductstore"}
rmqtt-p2p-messaging = { path = "rmqtt-plugins/rmqtt-p2p-messaging"}


[workspace.package]
version = "0.17.1"
edition = "2021"
authors = ["rmqtt <rmqttd@126.com>"]
description = "MQTT Server for v3.1, v3.1.1 and v5.0 protocols"
repository = "https://github.com/rmqtt/rmqtt.git"
license = "MIT OR Apache-2.0"
categories = ["network-programming"]
keywords = ["MQTT", "IoT", "messaging", "MQTT-Server", "MQTT-Broker"]
exclude = [".gitignore", ".cargo/config"]
rust-version = "1.85.0"


[workspace.dependencies]
rmqtt = "0.17.1"
rmqtt-codec = "0.2"
rmqtt-net = "0.3.1"
rmqtt-conf = "0.3"
rmqtt-macros = "0.1"
rmqtt-utils = "0.1"

rmqtt-plugins = "0.17.1"
rmqtt-acl = "0.17.1"
rmqtt-retainer = "0.17.1"
rmqtt-http-api = "0.17.1"
rmqtt-counter = "0.17.1"
rmqtt-auth-http = "0.17.1"
rmqtt-auth-jwt = "0.17.1"
rmqtt-auto-subscription = "0.17.1"
rmqtt-bridge-egress-kafka = "0.17.1"
rmqtt-bridge-ingress-kafka = "0.17.1"
rmqtt-bridge-egress-mqtt = "0.17.1"
rmqtt-bridge-ingress-mqtt = "0.17.1"
rmqtt-bridge-ingress-pulsar = "0.17.1"
rmqtt-bridge-egress-pulsar = "0.17.1"
rmqtt-bridge-ingress-nats = "0.17.1"
rmqtt-bridge-egress-nats = "0.17.1"
rmqtt-bridge-egress-reductstore = "0.17.1"
rmqtt-message-storage = "0.17.1"
rmqtt-session-storage = "0.17.1"
rmqtt-sys-topic = "0.17.1"
rmqtt-topic-rewrite = "0.17.1"
rmqtt-web-hook = "0.17.1"
rmqtt-cluster-raft = "0.17.1"
rmqtt-cluster-broadcast = "0.17.1"
rmqtt-p2p-messaging = "0.17.1"

tokio = { version = "1.44",  default-features = false }
reqwest = "0.12"
futures = "0.3"
serde = "1.0"
tokio-util = "0.7"
tokio-rustls = "0.26"
socket2 = "0.5"
prost = "0.13"
rustls = "0.23"
once_cell = "1.21.3"
dashmap = "6.1.0"
ahash = "0.8"
bytes = "1.10"
bytestring = "1.4"
thiserror = "1.0.69"
anyhow = "1.0.99"
async-trait = "0.1"
serde_json = "1.0"
chrono = { version = "0.4", default-features = false }
uuid = "1.11.0"
rand = "0.9.0"
governor = "0.10"
config = { version = "0.15.8", default-features = false}
log = "0.4"
slog = "2.7"
slog-term = "2.9"
slog-async = "2.8"
slog-stdlog = "4.1"
slog-scope = "4.4"
base64 = "0.22"
bincode = "1.3"
url = { version = "2.5.4", default-features = false }
systemstat = "0.2"
itertools = "0.14"
structopt = "0.3"
tokio-tungstenite = "0.27"
pin-project-lite = "0.2"
bitflags = "2.9.2"
leaky-bucket = "1.1.2"
scc = "2.3.4"
get-size = "0.1"
prometheus = "0.13"
futures-time = "3.0"
nonzero_ext = "0.3"
itoa = "1.0.15"
simple_logger = { version = "5.0.0", default-features = false }
regex = "1.11.1"
backoff = "0.4"
webpki-roots = "0.26"
toml = "0.9"
rust-box = "0.15"
scopeguard = "1"
rayon = "1.11.0"
parking_lot = "0.12.4"
proxy-protocol = "0.5"
jsonwebtoken = "9.3.1"
quinn = "0.11.6"

[profile.dev]
opt-level = 0

[profile.release]
lto = true
opt-level = 's'
codegen-units = 1
panic = "abort"

